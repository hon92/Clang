<project name="project1" root-directory="/home/honza/Plocha/kaira-git/testproject/project1" target_env="C++"><configuration><build-option name="LIBS" /><build-option name="CFLAGS">-O2</build-option><head-code>int testing;
double aaaaaa;
int AAA;
struct tt
{
tt()
{

}
tt(int x)
{

}

};

class myvar
{
public:
myvar()
{

}
float sum(float x,float y)
{
return x+y;
}
int sum(int x,int y)
{
return x+y;

}

std::string token_name() const
{
return "myvar";
}
char * test()
{

return (char*)"aloha";
}
};

myvar glob;
</head-code></configuration><description>&lt;project library-octave="False" library-rpc="False" target_env="C++"&gt;&lt;configuration&gt;&lt;build-option name="LIBS" /&gt;&lt;build-option name="CFLAGS"&gt;-O2&lt;/build-option&gt;&lt;head-code&gt;int testing;
double aaaaaa;
int AAA;
struct tt
{
tt()
{

}
tt(int x)
{

}

};

class myvar
{
public:
myvar()
{

}
float sum(float x,float y)
{
return x+y;
}
int sum(int x,int y)
{
return x+y;

}

std::string token_name() const
{
return "myvar";
}
char * test()
{

return (char*)"aloha";
}
};

myvar glob;
&lt;/head-code&gt;&lt;/configuration&gt;&lt;net id="101" name="project1"&gt;&lt;place id="103" label-x="-332" label-y="-148" name="x" radius="20" sx="0" sy="0" x="-332" y="-148"&gt;&lt;place-type x="-315" y="-131"&gt;int&lt;/place-type&gt;&lt;init x="-315" y="-178"&gt;[0]&lt;/init&gt;&lt;code&gt;	
	ctx.quit();
&lt;/code&gt;&lt;trace trace-tokens="False" /&gt;&lt;/place&gt;&lt;place id="106" label-x="-842" label-y="-151" name="y" radius="20" sx="0" sy="0" x="-842" y="-151"&gt;&lt;place-type x="-825" y="-134"&gt;int&lt;/place-type&gt;&lt;init x="-825" y="-181"&gt;[8]&lt;/init&gt;&lt;code&gt;place.add(5);
testing = 15;
place.add_token(new ca::Token&amp;lt;int&amp;gt;());
  int eeee = 99;
  
  
  
  
&lt;/code&gt;&lt;trace trace-tokens="False" /&gt;&lt;/place&gt;&lt;place id="110" label-x="-770" label-y="85" name="var" radius="20" sx="0" sy="0" x="-770" y="85"&gt;&lt;place-type x="-753" y="102"&gt;myvar&lt;/place-type&gt;&lt;init x="-753" y="55"&gt;[glob]&lt;/init&gt;&lt;code&gt;	ca::TokenList&amp;lt;int&amp;gt; *p = new ca::TokenList&amp;lt;int&amp;gt;();
	p-&amp;gt;add(9);
	
&lt;/code&gt;&lt;trace trace-tokens="False" /&gt;&lt;/place&gt;&lt;transition clock="False" collective="False" id="105" label-x="-602" label-y="-148" name="test" priority="" sx="70" sy="36" x="-637" y="-166"&gt;&lt;guard x="-623" y="-185"&gt;y &amp;gt; 5&lt;/guard&gt;&lt;code&gt;	var.y = 15;
	int *poi;
	testing = 9898;
	
&lt;/code&gt;&lt;/transition&gt;&lt;transition clock="False" collective="False" id="112" label-x="-592" label-y="88" name="none" priority="" sx="70" sy="36" x="-627" y="70"&gt;&lt;guard x="-627" y="50" /&gt;&lt;code&gt;	printf(var.v.test());
	ctx.quit();
	
	
	
	
	
	
	
	
&lt;/code&gt;&lt;/transition&gt;&lt;edge from_item="106" id="107" to_item="105"&gt;&lt;inscription x="-728.0" y="-149.0"&gt;y&lt;/inscription&gt;&lt;/edge&gt;&lt;edge from_item="105" id="108" to_item="103"&gt;&lt;inscription x="-458.0" y="-147.0"&gt;y+5&lt;/inscription&gt;&lt;/edge&gt;&lt;edge from_item="110" id="113" to_item="112"&gt;&lt;inscription x="-688.0" y="86.0"&gt;v&lt;/inscription&gt;&lt;/edge&gt;&lt;edge from_item="112" id="115" to_item="103"&gt;&lt;inscription x="-459.0" y="-32.0"&gt;z&lt;/inscription&gt;&lt;/edge&gt;&lt;/net&gt;&lt;net id="118" name="pro2"&gt;&lt;place id="119" label-x="-381" label-y="-117" name="te" radius="20" sx="0" sy="0" x="-381" y="-117"&gt;&lt;place-type x="-364" y="-100"&gt;std::string&lt;/place-type&gt;&lt;init x="-364" y="-147"&gt;["de"]&lt;/init&gt;&lt;code&gt;	place.add("testing");
&lt;/code&gt;&lt;trace trace-tokens="False" /&gt;&lt;/place&gt;&lt;place id="122" label-x="-1" label-y="-119" name="" radius="20" sx="0" sy="0" x="-1" y="-119"&gt;&lt;place-type x="16" y="-102"&gt;std::string&lt;/place-type&gt;&lt;init x="16" y="-149" /&gt;&lt;trace trace-tokens="False" /&gt;&lt;/place&gt;&lt;transition clock="False" collective="False" id="120" label-x="-225" label-y="-118" name="ss" priority="" sx="70" sy="36" x="-260" y="-136"&gt;&lt;guard x="-260" y="-156" /&gt;&lt;code&gt;	var.s += var.s;
	
&lt;/code&gt;&lt;/transition&gt;&lt;edge from_item="119" id="121" to_item="120"&gt;&lt;inscription x="-310.0" y="-117.0"&gt;s&lt;/inscription&gt;&lt;/edge&gt;&lt;edge from_item="120" id="123" to_item="122"&gt;&lt;inscription x="-105.0" y="-118.0"&gt;s&lt;/inscription&gt;&lt;/edge&gt;&lt;/net&gt;&lt;/project&gt;</description><net id="101" name="project1"><place id="103" init-expr="[0]" name="x" type="int"><code>	
	ctx.quit();
</code></place><place id="106" init-expr="[8]" name="y" type="int"><code>place.add(5);
testing = 15;
place.add_token(new ca::Token&lt;int&gt;());
  int eeee = 99;
  
  
  
  
</code></place><place id="110" init-expr="[glob]" name="var" type="myvar"><code>	ca::TokenList&lt;int&gt; *p = new ca::TokenList&lt;int&gt;();
	p-&gt;add(9);
	
</code></place><transition clock="False" collective="False" guard="y &gt; 5" id="105" name="test" priority=""><code>	var.y = 15;
	int *poi;
	testing = 9898;
	
</code><edge-in expr="y" id="107" place-id="106" /><edge-out expr="y+5" id="108" place-id="103" /></transition><transition clock="False" collective="False" guard="" id="112" name="none" priority=""><code>	printf(var.v.test());
	ctx.quit();
	
	
	
	
	
	
	
	
</code><edge-in expr="v" id="113" place-id="110" /><edge-out expr="z" id="115" place-id="103" /></transition></net><net id="118" name="pro2"><place id="119" init-expr="[&quot;de&quot;]" name="te" type="std::string"><code>	place.add("testing");
</code></place><place id="122" init-expr="" name="" type="std::string" /><transition clock="False" collective="False" guard="" id="120" name="ss" priority=""><code>	var.s += var.s;
	
</code><edge-in expr="s" id="121" place-id="119" /><edge-out expr="s" id="123" place-id="122" /></transition></net></project>