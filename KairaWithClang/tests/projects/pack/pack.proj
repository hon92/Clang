<project library-octave="False" library-rpc="False" target_env="C++"><configuration><build-option name="LIBS" /><build-option name="CFLAGS">-O0 -g</build-option><head-code>

struct MyStruct1 {
	int x;
	std::string a;
	size_t s;
	void *mem;
};

struct MyStruct2 {
	int x;
	std::string a;

	void pack(ca::Packer &amp;p) const {
		p &lt;&lt; x &lt;&lt; a;
	}
	
	void unpack(ca::Unpacker &amp;p) {
		p &gt;&gt; x &gt;&gt; a;
	}
	
	std::string token_name() const {
		return "MyStruct2";
	}
};

struct MyStruct3 {
	double e;
	int f;
};

namespace ca {
	CA_TOKEN_NAME(MyStruct1, m) {
		return "MyStruct1";
	}
	
	CA_PACK(MyStruct1, p, m) {
		p &lt;&lt; m.a &lt;&lt; m.s;
		pack(p, m.mem, m.s);
		pack(p, m.x);
	}	
	
	CA_UNPACK(MyStruct1, p, m) {
		p &gt;&gt; m.a &gt;&gt; m.s;
		if (m.s != 0) {
			m.mem = malloc(m.s);
			memcpy(m.mem, p.unpack_data(m.s), m.s);				
		} else {
			m.mem = NULL;
		}
		unpack(p, m.x);
	}
	
	CA_TOKEN_NAME(MyStruct3, m) {
		return "MyStruct3";
	}
	CA_TRIVIALLY_PACKABLE(MyStruct3);
};</head-code></configuration><net id="101" name="Main"><place id="102" label-x="-177.0" label-y="19.0" name="" radius="20" sx="0" sy="0" x="-177.0" y="19.0"><place-type x="-160.0" y="36.0">MyStruct1</place-type><init x="-160.0" y="-11.0" /><code>	MyStruct1 m,n;
	
	m.x = 101;
	m.a = "ABC";
	m.s = 100;	
	m.mem = malloc(100);
	char *v = (char*) m.mem;
	for (int i = 0; i &lt; 100; i++) {
		v[i] = i;
	}
		
	n.x = 20005;
	n.a = "012345678901234567890";
	n.s = 0;
	n.mem = NULL;
	
	place.add(m);
	place.add(n);	
</code></place><place id="104" label-x="111.0" label-y="17.0" name="" radius="20" sx="0" sy="0" x="111.0" y="17.0"><place-type x="128.0" y="34.0">MyStruct1</place-type><init x="128.0" y="-13.0" /></place><place id="109" label-x="356.0" label-y="119.0" name="" radius="20" sx="0" sy="0" x="356.0" y="119.0"><place-type x="373.0" y="136.0">MyStruct1</place-type><init x="373.0" y="89.0" /></place><transition clock="False" id="103" label-x="-41.0" label-y="19.0" name="" priority="" sx="70" sy="35" x="-76.0" y="1.0"><guard x="-76.0" y="-19.0" /></transition><transition clock="False" id="107" label-x="355.0" label-y="20.0" name="" priority="" sx="70" sy="35" x="320.0" y="2.0"><guard x="320.0" y="-18.0" /></transition><transition clock="False" id="112" label-x="356.0" label-y="211.0" name="" priority="" sx="70" sy="35" x="321.0" y="193.0"><guard x="321.0" y="173.0" /><code>	MyStruct1 m = var.xs.begin()-&gt;value;
	MyStruct1 n = var.xs.begin()-&gt;next-&gt;value;	
	if (var.x2.x == 100 &amp;&amp; var.x2.a == "AAA" &amp;&amp; var.x3.e == 4.0 &amp;&amp; var.x3.f == 121212 &amp;&amp; 
	    m.x == 101 &amp;&amp;
	    m.a == "ABC" &amp;&amp; 
	    m.s == 100 &amp;&amp;
	    n.x == 20005 &amp;&amp;
	    n.s == 0 &amp;&amp;
	    n.a == "012345678901234567890" &amp;&amp;
	    n.mem == NULL ) {
		char *v = (char*) m.mem;
			for (int i = 0; i &lt; 100; i++) {
				if (v[i] != i) {
					printf("Err %i %i\n", i, v[i]);
				}
		}
	    printf("Ok\n");   
	} else {
	    printf("Err 1\n");
	}
	    	
	ctx.quit();
</code></transition><edge from_item="102" id="105" to_item="103"><inscription x="-123.500067581" y="3.59191201317">x</inscription></edge><edge from_item="103" id="106" to_item="104"><inscription x="27.5004868931" y="1.48354782671">x@1</inscription></edge><edge from_item="104" id="108" to_item="107"><inscription x="166.499475149" y="0.959011015869">[bulk, guard(size==2)] xs</inscription></edge><edge from_item="107" id="110" to_item="109"><inscription x="364.489502563" y="61.0005049995">[bulk] xs</inscription></edge><edge from_item="109" id="113" to_item="112"><inscription x="370.0" y="162.0">[bulk, guard(size==2)] xs</inscription></edge><place id="115" label-x="-176.0" label-y="168.5" name="" radius="20" sx="0" sy="0" x="-176.0" y="168.5"><place-type x="-159.0" y="185.5">MyStruct2</place-type><init x="-159.0" y="138.5" /><code>	MyStruct2 m;
	m.x = 100;
	m.a = "AAA";
	place.add(m);
</code></place><transition clock="False" id="116" label-x="-8.0" label-y="168.5" name="" priority="" sx="70" sy="36" x="-43.0" y="150.5"><guard x="-43.0" y="130.5" /></transition><place id="117" label-x="-172.0" label-y="274.5" name="" radius="20" sx="0" sy="0" x="-172.0" y="274.5"><place-type x="-155.0" y="291.5">MyStruct3</place-type><init x="-155.0" y="244.5" /><code>	MyStruct3 m;
	m.e = 4.0;
	m.f = 121212;
	place.add(m);
</code></place><place id="118" label-x="158.0" label-y="165.5" name="" radius="20" sx="0" sy="0" x="158.0" y="165.5"><place-type x="175.0" y="182.5">MyStruct2</place-type><init x="175.0" y="135.5" /></place><place id="119" label-x="164.0" label-y="278.5" name="" radius="20" sx="0" sy="0" x="164.0" y="278.5"><place-type x="181.0" y="295.5">MyStruct3</place-type><init x="181.0" y="248.5" /></place><transition clock="False" id="120" label-x="8.0" label-y="276.5" name="" priority="" sx="70" sy="36" x="-27.0" y="258.5"><guard x="-27.0" y="238.5" /></transition><edge from_item="115" id="121" to_item="116"><inscription x="-106.5" y="154.5">x</inscription></edge><edge from_item="116" id="122" to_item="118"><inscription x="71.5016326383" y="151.864428326">x@1</inscription></edge><edge from_item="117" id="123" to_item="120"><inscription x="-96.5000180075" y="257.585367909">x</inscription></edge><edge from_item="120" id="124" to_item="119"><inscription x="77.5008217264" y="259.596164381">x@1</inscription></edge><edge from_item="118" id="125" to_item="112"><inscription x="241.844827586" y="145.75">x2</inscription><point x="281.0" y="166.5" /></edge><edge from_item="119" id="126" to_item="112"><inscription x="251.293814433" y="247.25">x3</inscription><point x="301.0" y="258.5" /></edge></net></project>