<project target_env="C++"><configuration><build-option name="CC">g++</build-option><build-option name="LIBS" /><build-option name="CFLAGS">-O0 -g</build-option><head-code>
int identity(int i) {
	return i;
}</head-code></configuration><net id="101" name="Main" net-type="main"><edge from_item="103" id="104" to_item="102"><inscription x="-126.0" y="-42.0">x@0</inscription></edge><edge from_item="105" id="106" to_item="103"><inscription x="-266.0" y="-37.0">x</inscription></edge><edge from_item="102" id="109" to_item="108"><inscription x="-49.0" y="4.0">[svar(sx)] x</inscription></edge><edge from_item="108" id="111" to_item="110"><inscription x="-36.0" y="78.0">identity(sx)</inscription></edge><edge from_item="114" id="115" to_item="103"><inscription x="-250.0" y="19.0">0</inscription></edge><edge from_item="103" id="119" to_item="118"><inscription x="-62.0" y="-102.0">x@0</inscription><point x="-108" y="-103" /></edge><edge from_item="118" id="121" to_item="120"><inscription x="84.0" y="-140.0">[bulk, svar(origins), guard(size == 6) ] tokens</inscription></edge><edge from_item="110" id="122" to_item="120"><inscription x="191.0" y="89.0">[guard(size % 6 == 0)]</inscription><point x="180" y="120" /></edge><edge from_item="120" id="125" to_item="114"><inscription x="62.0" y="163.0">0@0</inscription><point x="401" y="-88" /><point x="399" y="168" /><point x="-274" y="159" /></edge><edge from_item="120" id="126" to_item="114"><inscription x="72.0" y="192.0">0@1</inscription><point x="450" y="-107" /><point x="448" y="194" /><point x="-303" y="191" /></edge><edge from_item="120" id="127" to_item="114"><inscription x="72.0" y="236.0">0@2</inscription><point x="503" y="-152" /><point x="497" y="248" /><point x="-353" y="224" /></edge><edge from_item="108" id="116" to_item="114"><inscription x="-227.0" y="39.0">0@identity(sx)</inscription></edge><area id="107" sx="123" sy="214" x="-385" y="-96"><init x="-385" y="-111">[0;1;2]</init></area><place id="102" name="" radius="20" sx="0" sy="0" x="-57" y="-33"><place-type x="-40" y="-16">std::string</place-type><init x="-40" y="-63" /></place><place id="105" name="" radius="20" sx="0" sy="0" x="-339" y="-45"><place-type x="-322" y="-28">std::string</place-type><init x="-322" y="-75" /><code>	std::stringstream s;
	s &lt;&lt; ctx.process_id();
	place.add(s.str());
	place.add(s.str());
</code></place><place id="110" name="" radius="20" sx="0" sy="0" x="-54" y="120"><place-type x="-37" y="137">int</place-type><init x="-37" y="90" /></place><place id="114" name="" radius="20" sx="0" sy="0" x="-312" y="59"><place-type x="-295" y="76">int</place-type><init x="-295" y="29" /></place><place id="118" name="" radius="20" sx="0" sy="0" x="2" y="-101"><place-type x="19" y="-84">std::string</place-type><init x="19" y="-131">["0"; "0"]</init><code>	for (int i = 0; i &lt; 4; i++) {
		place.add("0");
	}
</code></place><transition id="103" name="" priority="" sx="70" sy="35" x="-214" y="-45"><guard x="-214" y="-65" /><code>
</code></transition><transition id="108" name="" priority="" sx="70" sy="35" x="-90" y="36"><guard x="-90" y="16" /><code>	std::stringstream s;
	s &lt;&lt; var.sx;
	if (s.str() != var.x) {
		printf("Error");
	}
</code></transition><transition id="120" name="" priority="" sx="70" sy="35" x="143" y="-122"><guard x="143" y="-142" /><code>	int sum = 0;
	ca::Token&lt;std::string&gt; *t = var.tokens.begin();
	for (int i = 0; i &lt; var.origins.size(); i++) {
		std::stringstream s;
		s &lt;&lt; var.origins[i];
		if (s.str() != t-&gt;value) {
			printf("Error\n");
		}
		sum += var.origins[i];
		t = var.tokens.next(t);
	}
	if (sum &gt; 0) {
	  printf("Ok\n");
	  fflush(stdout);
	  ctx.quit();
	}
</code></transition></net></project>